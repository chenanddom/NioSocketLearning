package com.itdom.receivebuffer;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;

public class ReceiveBufferClient {
    public static void main(String[] args) {
        try {
            Socket socket = new Socket();

            System.out.println("begin "+socket.getReceiveBufferSize());
            socket.connect(new InetSocketAddress("localhost",8088));
            System.out.println("end "+socket.getReceiveBufferSize());
            OutputStream outputStream = socket.getOutputStream();
            for (int i = 0; i < 100; i++) {
                outputStream.write(("2131231231287381237128371237237123632173621736127361276372136721312312312" +
                        "87381237128371237237123632173621736127361276372136721312312312873812371283712372371" +
                        "23632173621736127361276372136721312312312873812371283712372371236321736217361273612" +
                        "7637213672131231231287381237128371237237123632173621736127361276372136721312312312" +
                        "8738123712837123723712363217362173612736127637213672131231231287381237128371237237" +
                        "1236321736217361273612763721367213123123128738123712837123723712363217362173612736" +
                        "1276372136721312312312873812371283712372371236321736217361273612763721367213123123" +
                        "12873812371283712372371236321736217361273612763721367213123123128738123712837123723" +
                        "71236321736217361273612763721367213123123128738123712837123723712363217362173612736" +
                        "127637213672131231231287381237128371237237123632173621736127361276372136721312312312" +
                        "873812371283712372371236321736217361273612763721367213123123128738123712837123723712" +
                        "3632173621736127361276372136721312312312873812371283712372371236321736217361273612763" +
                        "72136721312312312873812371283712372371236321736217361273612763721367213123123128738" +
                        "1237128371237237123632173621736127361276372136721312312312873812371283712372371236" +
                        "21736217361273612763721367213123123128738123712837123723712363217362173612736127637" +
                        "2136721312312312873812371283712372371236321736217361273612763721367213123123128738" +
                        "12371283712372371236321736217361273612763721367213123123128738123712837123723712363" +
                        "21736217361273612763721367213123123128738123712837123723712363217362173612736127637" +
                        "21367213123123128738123712837123723712363217362173612736127637213672131231231287381" +
                        "23712837123723712363217362173612736127637213672131231231287381237128371237237123632" +
                        "173621736127361276372136721312312312873812371283712372371236321736217361273612763721").getBytes());
            }
            outputStream.write("end!".getBytes());
            outputStream.close();
            socket.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
